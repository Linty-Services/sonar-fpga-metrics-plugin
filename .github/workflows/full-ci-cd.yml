name: Full CI/CD
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version to release (i.e.: 1.2.0)'
        required: true
      next_version:
        description: 'Next development cycle version (i.e.: 1.3.0-SNAPSHOT)'
        required: true

jobs:
  build-lts:
    name: Build on Commit
    timeout-minutes: 10
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Build and Test
        run: mvn -B clean verify -Pits -"Dsonar.runtimeVersion=${{ vars.SONAR_LTS_VERSION }}"

  build:
    name: Build on Commit
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: build-lts
    if: always()
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Set Release Version ${{ github.event.inputs.release_version }}
        if: github.event_name == 'workflow_dispatch'
        run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.release_version }} -DgenerateBackupPoms=false

      - name: Build and Test
        run: mvn -B clean verify -Pits -"Dsonar.runtimeVersion=${{ vars.SONAR_VERSION }}"

      - name: Run SonarQube Analysis
        if: contains(github.ref, 'main')
        run: mvn -B sonar:sonar -Dsonar.login=${{ secrets.SONARQUBE_SCANNER_FOR_PRIVATE_REPOSITORIES_TOKEN }}

      - name: Upload Plugin JAR
        uses: actions/upload-artifact@v3
        with:
          name: plugin
          path: |
            sonar-fpga-metrics-plugin/target/sonar-fpga-metrics-plugin-*.jar
            !sonar-fpga-metrics-plugin/target/sonar-fpga-metrics-plugin-*-sources.jar

      - name: Commit, Push and Tag Release Version ${{ github.event.inputs.release_version }}
        if: github.event_name == 'workflow_dispatch'
        uses: EndBug/add-and-commit@v9
        with:
          add: '*'
          author_name: GitHub Actions
          author_email: github-actions@linty-services.com
          message: Release version ${{ github.event.inputs.release_version }}
          tag: ${{ github.event.inputs.release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Release Commit Hash
        run: echo $(git rev-parse HEAD) >> release_commit.txt

      - name: Set Next Development Cycle Version ${{ github.event.inputs.next_version }}
        if: github.event_name == 'workflow_dispatch'
        run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.next_version }} -DgenerateBackupPoms=false

      - name: Commit and Push Next Development Cycle Version ${{ github.event.inputs.next_version }}
        if: github.event_name == 'workflow_dispatch'
        uses: EndBug/add-and-commit@v9
        with:
          add: '*'
          author_name: GitHub Actions
          author_email: github-actions@linty-services.com
          message: Bump version to ${{ github.event.inputs.next_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Latest Commit Hash
        run: echo $(git rev-parse HEAD) >> latest_commit.txt

      - name: Upload Commit Hashes
        uses: actions/upload-artifact@v3
        with:
          name: commits
          path: |
            release_commit.txt
            latest_commit.txt

  pre-release:
    name: GitHub Pre-release
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: build
    if: contains(github.ref, 'main')
    steps:
      - name: Download Plugin JAR
        uses: actions/download-artifact@v3
        with:
          name: plugin

      - name: Rename JAR into latest
        run: mv sonar-fpga-metrics-plugin-*.jar sonar-fpga-metrics-plugin-latest.jar

      - name: Read Latest Commit Hash
        run: echo "LATEST_COMMIT=$(cat latest_commit.txt)" >> $GITHUB_ENV

      - name: Delete latest Release
        run: gh release delete latest -R Linty-Services/sonar-fpga-metrics-plugin --cleanup-tag -y
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "GitHub Release: ${{ github.event.inputs.release_version }}"
        uses: ncipollo/release-action@v1
        with:
          tag: latest
          artifacts: sonar-fpga-metrics-plugin-latest.jar
          name: Latest build from main
          commit: ${{ env.LATEST_COMMIT }}

  release:
    name: GitHub Release
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Download Plugin JAR
        uses: actions/download-artifact@v3
        with:
          name: plugin

      - name: Download Commit Hashes
        uses: actions/download-artifact@v3
        with:
          name: commits

      - name: Read Release Commit Hash
        run: echo "RELEASE_COMMIT=$(head -n 1  release_commit.txt)" >> $GITHUB_ENV

      - name: "GitHub Release: ${{ github.event.inputs.release_version }}"
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.release_version }}
          artifacts: sonar-fpga-metrics-plugin-*.jar
          name: ${{ github.event.inputs.release_version }}
          commit: ${{ env.RELEASE_COMMIT }}

      - name: "Close Milestone ${{ github.event.inputs.release_version }}"
        uses: Akkjon/close-milestone@v2.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          milestone_name: ${{ github.event.inputs.release_version }}
